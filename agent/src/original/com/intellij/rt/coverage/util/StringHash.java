package original.com.intellij.rt.coverage.util;

public class StringHash {
   private static final long initialHash = -2223765811167872118L;
   private static final long[] mixMaster = new long[]{4933139351476610159L, 5005341462544428057L, -1453159914355205806L, 8281325462521708801L, 4607748714844293732L, -3764111934339875086L, 8320409100192189548L, 8420247983362759768L, -7597847052445934233L, -3173910141822783079L, -7688989699042292238L, 3429396389939155751L, -5062430034552481777L, -5823362867119656213L, -8801844128422882523L, -5052715516771863111L, -870733797230659614L, -362319592869525219L, 4788732200433335801L, 4548830613927191315L, 7544806401538812819L, 7586374831082653871L, -1239807311421564983L, -1025074758523306758L, -6461364975704083531L, 4980358060886603154L, 4930714604177104463L, 2056556441885503234L, 6415600006540841207L, 5752606625249102471L, -6901047628927138211L, 4380804002232388461L, 2136177531279569616L, -349124148475530926L, 5812918152301571081L, 2653996859211630983L, -8964669850071968930L, -4437664257013106290L, -4451793919529815848L, -6106447162657623665L, -2784513668583920662L, -8414094705339005679L, -2207660270505147217L, 6507182462343745303L, 3998020595653193692L, -4905660070025874796L, 8975096142356144569L, -5041136955134566960L, 6326461847893020390L, -8334182183764239684L, 8556220744479549098L, 5952375207892112881L, -7978188702101473111L, 3429112276528980994L, -1988898937000646866L, 2486915316353720383L, 2757556857947252991L, -8035426787455266998L, -5909132100679174360L, -6318099829270576077L, 3275413890805227550L, 8566783651680167794L, -8052141503744051402L, 6010845682144071745L, -8304400873715963628L, -5908078436425678820L, 2008553160573808559L, -2819166021021999412L, 5382424027072043613L, 4009717960598662055L, 1847990988848319135L, 1553736051808583315L, 859749159554435887L, 7617586268418296496L, 1137154929561829007L, 5852822296314685177L, -4508192713666290713L, -5301006392906118754L, 1288351301968457687L, -8732661820775296997L, 3743401301997395901L, -2419474111827280115L, 7681208082025123430L, 3296754401383622098L, -7619743871140571789L, -5444468319237031174L, -1826393263972127734L, 7226290837104890605L, -5114545287089190416L, -864060354928875654L, -8684023854450108313L, -5194241922878987455L, -4591192147793544772L, 1234006919577364415L, -3936336625490884591L, -6593724713396498301L, 2779431284120425192L, 6701924018397514024L, -8377286492131653356L, -3036688545137929654L, 3532479440175035477L, -2486020288450892679L, 2250253404502830513L, -2809438569251519750L, 4756054313855198704L, 1049792658466837024L, 6008045257375748577L, -6694551306109829524L, 1436162486427990919L, 1953260999445835298L, -9096306926072925342L, -4447170959021479724L, 2281765276900129197L, 7018045439268088125L, 3530326859556441572L, 8928500367007969872L, -7548504910768415306L, 8491174918848727063L, 2725427544642412950L, -1846557650567198975L, 7692844570254237316L, -2329275471928509258L, -6598670108873750485L, 7286879004720242648L, 1262623724617059856L, -244363932095942076L, 724052077250196479L, 7172078234317036693L, 6811892593491539548L, -1152819477767237299L, 5138119163643488320L, 3665390357066136642L, 3191793013164901058L, -3685846739734149158L, 3982065459219965474L, 4822562617140336199L, -7365836214641480259L, 3271367842686489154L, 8724038983453203841L, -5457652260866279808L, -7732217390738789556L, 6693059324359418400L, -1682134157496827727L, 2418769104580471956L, 8879551251272072751L, -4997356740189703104L, -9071099120143888272L, -680892989853392074L, 1739587042988643069L, 3373404624189000959L, 5680319921195915068L, -200507342791498747L, -9024929211895825182L, -5932255459591969881L, 6490413647370805508L, -1547832658927226783L, 5735044581415517929L, -7479951246403808438L, 5523990179621710356L, 218706823903385161L, 7226912064490112629L, -6484667915835023296L, 3807960521479491588L, -6480648837128221188L, -4423332479301058453L, -4129662350876414705L, -3595141808378884930L, -418947722213327333L, -2844517618114579613L, 232829063699966274L, 8466137507511586716L, -1118264937587278139L, 1543018742721807459L, -417715424100470517L, 7978015287561484139L, 1544841464337700354L, 2730772503959541077L, 6769471625959199573L, 2547724611065914717L, -1940936672524046959L, 5025251617293336350L, 7320004681537167149L, -3912074961302627416L, 7320690559666328252L, 5383105008300071328L, -174245335696147700L, -3487002892556502424L, -7875405188139200998L, -4846224533375351692L, -8233369710693908789L, -2513185776770054861L, 7044164889131634069L, -989536329366695740L, -2653183515149969267L, -6050910942263229355L, -6767225479892761414L, -8730286237691595927L, -7012453055387909991L, 1133255728415756315L, 6499423626313885142L, -8300437812355002225L, 9084539283118027484L, -6585717722744514702L, 4401193149167703339L, -6984141159414974299L, 6813307151674075053L, -3736939605366610537L, 2230231106005033322L, 7182850806518785871L, 6609805295487548421L, -6053556321550009287L, -7101717864338141727L, -2748614509684029005L, -2214104135226745859L, 1458022522121146992L, -6277575509698422280L, -3752164500142762032L, -7386173236844847452L, 72421085476613114L, 8124536607956790703L, -543955773244899281L, -8431654451114250658L, 1016600102774762451L, 5528967934420998822L, -3124619278526463133L, -2661902829300881246L, 4614101272245083638L, 7665806731349260979L, -502154115469221375L, -2229763030801674433L, -5656627420725844516L, 7754751075884126842L, -8397886589148919922L, 178266931321858041L, -3426667875362162740L, -894029959067713205L, 424720112276865871L, 3940003122762310991L, 6952877505786372216L, -5316198582568905216L, -3412595509278337916L, 4377191117302511558L, 5078204108498312433L, -5686359500817622618L, -5011364611249461122L, -5411888686611253299L, -3917988986397697302L, 3323582688409225420L, -709625314233156680L, 4388451852439127499L, 5109473580125722386L, -8350301363804656390L, 8883392537907563280L, 2983318135082155233L, -4968080463103317282L, 959966860625488182L};

   StringHash() {
   }

   public static long calc(String arg) {
      if (arg == null) {
         return 0L;
      } else {
         long h = -2223765811167872118L;

         for(int i = 0; i < arg.length(); ++i) {
            h = h << 1 ^ h >>> 63 ^ mixMaster[(arg.charAt(i) ^ arg.charAt(i) >>> 8) & 255];
         }

         return h;
      }
   }
}
